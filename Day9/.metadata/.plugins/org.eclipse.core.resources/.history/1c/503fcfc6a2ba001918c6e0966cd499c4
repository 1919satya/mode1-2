package com.hcl.bank;

import static org.junit.Assert.*;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.junit.Test;

public class AccountsTestCase {
	@Test
	public void testDepositAccount(){
		assertEquals("Amount Credited",
				AccountBal.depositeAccountBal(3,3000));
		assertEquals("Account No Not Found",
				AccountBal.depositeAccountBal(-3,3000));
		assertEquals("Account closed",
				AccountBal.depositeAccountBal(1,3000));
		
	}
	@Test
	public void testWithdrawAccount(){
		assertEquals("Amount Debited",
				AccountBal.withdrawnAccountBal(2,1000));
		assertEquals("Insufficient Balance",
				AccountBal.withdrawnAccountBal(2,100000));
		assertEquals("Account No Not Found",
				AccountBal.withdrawnAccountBal(-17,1000));
		assertEquals("Account closed",
				AccountBal.withdrawnAccountBal(1, 1000));
		
	}
	@Test
	public void testCloseAccount() {
		assertEquals("Status Closed",
				AccountBal.closeAccountBal(4));
		
		assertEquals("Account no not found",
				AccountBal.closeAccountBal(-4));
	}
	@Test
	public void testUpdateAccount() {
		assertEquals("Account Updated",
				AccountBal.updateAccountBal(2,"chennai","tn"));
		assertEquals("Account no not found",
				AccountBal.updateAccountBal(-2,"chennai","tn"));
		assertEquals("Account closed already",
				AccountBal.updateAccountBal(1,"chennai","tn"));	
	}
	@Test
	public void testSearchAccount() {
		assertNotNull(AccountBal.searchAccountBal(1));
		assertNull(AccountBal.searchAccountBal(-1));
	}
	@Test
	public void testCreateAccount() {
		Accounts objAccounts=new Accounts();
		int accno=AccountBal.generateAccountNoBal();
		objAccounts.setAccountNo(accno);
		objAccounts.setFirstName("bindhu");
		objAccounts.setLastName("sree");
		objAccounts.setCity("banglore");
		objAccounts.setState("ka");
		objAccounts.setAmount(99222);
		objAccounts.setAccountType("savings");
		
		assertEquals("Account Created Successfully ",
		AccountBal.createAcccountBal(objAccounts));
	}
	c
	@Test
	public void testGenerateAccountNo() {
		int accno=0;
		Connection con=DaoConnection.getConnection();
		String cmd="select max(accountNo)+1 accno from Accounts";
		try {
			PreparedStatement pst=con.prepareStatement(cmd);
			ResultSet rs=pst.executeQuery();
			rs.next();
			accno=rs.getInt("orderNo");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Test
	public void testGettersAndSetters() {
		Accounts objAccounts=new Accounts();
		objAccounts.setAccountNo(1);
		objAccounts.setFirstName("sai");
		objAccounts.setLastName("krishna");
		objAccounts.setCity("Banglore");
		objAccounts.setState("ka");
		objAccounts.setAmount(82222);
		objAccounts.setCheqFacil("yes");
		objAccounts.setAccountType("savings");

		assertEquals(1, objAccounts.getAccountNo());
		assertEquals("sai",objAccounts.getFirstName());
		assertEquals("krishna",objAccounts.getLastName());
		assertEquals("Banglore",objAccounts.getCity());
		assertEquals("ka",objAccounts.getState());
		assertEquals(82222,objAccounts.getAmount());
		assertEquals("yes",objAccounts.getCheqFacil());
		assertEquals("savings",objAccounts.getAccountType());
		


	}

}
